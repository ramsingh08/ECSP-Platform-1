FUNCTION_BLOCK "FB_UQZ_Template"
TITLE =%version: 0.33 % CN: 60
//Function:
//- Template for building Unloading Quay Zone (UQZ)
//
//Description:  
//The block fulfils the following functions:
//- Start/stopping the UQZ
//- Re-stating from energy save
//- Enabling/disabling the UQZ
//- Selecting capacity
//- Status reporting
//- Cascade start up
//
//The UQZ will be controlled with the following transport control functions:
//- Capacity control
//- Gap control
//- Flap filtering
//- Die-back control
//- Energy saving
//- Cascade starting
//- Delay start-up after die-back
//- Run signal equipment
//- Flow Control
//- Energy Saving
//- Displacement
//- External interfacing
//
//The hardware LMS block fulfils the following functions:
//- Monitoring ASI address (not present/error)
//- Monitoring motor connection
//- Monitoring LMS healthy
//- Run motor signal
//
//The UQZ belts have no tracking functionality. 
//
//History:
//This version  %created_by:  nlhdl %
//              %date_created:  maandag 6 juli 2015 10:46:22 %
//              %release: VI_CONV/RA_Dev_Oakham %
//
//Modification History:                                 By:      Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.33
//21008: Added SLC ASI errors, removed ASI 2 error      nlTny    06-10-14   0.33
//18028: Modify HardWare block LMS for Eaton Siemens    nlHdL    08-05-14   0.32
//16765: Change E-save symbol no common sett            nlHdL    16-12-13   0.31
//15807: Block consistency update IO symbols, comment   nlHdL    18-09-13   0.30
//CR14309 Update with last version FB_HW_ASI            nlple    19-06-13  0.29
//CR19512 Update sources according S7 Manager           nlHdL    8-3-13    0.28
//CR11547 Added i_CMD_Capacity after input was removed  nlHdL    20-11-12  0.27
//CR11547 Mofified init value Avaiable_IO & Safety_OK   nlHdL    08-11-12  0.26
//PR10014 Add Start-Up distance to block call          nlHdL   12-09-12  0.25
//PR9832 Added Section ID on basic block in zone       nlHdL   06-04-12  0.24
//CR7918 Init cascade if i_Cascade_Delay_Time = 0      nlHHop  26-03-12  0.23
//CR7941 Added speed dowstream for calc. cap. -> H2H   nlJBax  06-09-11  0.22
//CR7243 changed i_Previous_Offset > i_Dwnstr_PLT_Pos  nlHdL   05-07-11  0.21
//HCO HW_layer Missing & not linked to section         nlJBax  04-04-11  0.20
//connected output capacity to H2H calculation block
//PR5849 Update zone Inputs/Outputs                    nlJBax  25-10-10  0.19
//PR5841 Update zone Data Layer                        nlJBax  21-10-10  0.18
//CR7515 Update block call Hardware with statisticals  nlHdL   24-09-10  0.17
//Changed filename                                     nljbax  23-09-10  0.16
//Added SAC Comm Blocks, External Inputs & Outputs     inpna   23-09-10  0.15
//Update block interfaces major update                 nlMRe   20-09-10  0.14
//Modified according to Coding Convention              inPNa   16-09-10  0.13
//Update several parts and implemented Data layer      nlHEb   16-09-10  0.12
//PR5566 Remove i_ID                                   nlMRe   24-08-10  0.11
//PR5424: FB changed to FC "FC_CALC_H2H_Distance"      inpna   10-08-10  0.10
//PR5430: Correct family name                          nlMRe   27-07-10  0.09
//Modified variable names                              nlHEb   27-07-10  0.08
//Make statusses correct                               nlHEb   26-07-10  0.07
//PR5433: Detele output statusses on block call        nlMRe   22-07-10  0.06
//PR5433: Delete statusses auto, disable, SS and Error nlMRe   22-07-10  0.05
//PR5433: FB_UQZ_Template must use new statusses       nlMRe   21-07-12  0.04
//Update block with new "FB_EQP_PEC_Trigger"           nlHEb   16-07-10  0.03
//Checked in and out without changes                   nlHEb   16-07-10  0.02
//Initial Release                                      nlHEb   09-07-10  0.01
FAMILY : General
VERSION : 0.0


VAR_INPUT
  i_CMD_Enable : BOOL ;	//CMD: Enable command
  i_CMD_Start : BOOL ;	//CMD: Start command
  i_CMD_Reset : BOOL ;	//CMD: Reset command
  i_CMD_Send_Stat : BOOL ;	//CMD: Send Statistical
  i_Safety_OK : BOOL  := TRUE;	//Safety is OK signal
  i_Available_IO : BOOL  := TRUE;	//Signal for indication IO is OK (no Fieldbus or IO error)
  i_CMD_Capacity : INT  := 1200;	//CMD: [items/hour] Capacity
  i_CFG_Min_Capacity : INT  := 300;	//CFG: [items/hour] Minimum Capacity
  i_CFG_Max_Capacity : INT  := 1800;	//CFG: [items/hour] Maximum Capacity
  i_CFG_DB_PLT_DwnStr : BLOCK_DB ;	//Data Structure: Position DataBlock Downstream section
  i_CFG_Conv_Speed_Dwn : INT ;	//CFG: [mm/sec] Conveyor Speed of downstream section
  i_TSO_IO_NOT_PEC : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TSO_CFG_Block_Len : INT  := 50;	//CFG: [0,1 sec] Delay for detecting a PEC blockage
  i_PB_IO_Restart : BOOL ;	//HW: Push Button Restart
  i_PBB_ASI_NotPrsnt : BOOL ;	//ASI: Slave is not Present
  i_PBB_ASI_Err : BOOL ;	//ASI: Slave has an error
  i_HCO_ASI_NotPrsnt : BOOL ;	//ASI: Slave is not Present
  i_HCO_ASI_Er : BOOL ;	//ASI: Slave has an error
  i_HCO_SLC_ASI_NotPrsnt : BOOL ;	//ASI: Slave is not Present
  i_HCO_SLC_ASI_Err : BOOL ;	//ASI: Slave has an error
  i_HCO_IO_NOT_PEC_HGHT : BOOL ;	//HW: Height PEC (TRUE=No product detected)
  i_HCO_IO_PB_Reset_H_Chk : BOOL ;	//HW: Pushbutton for reset HCO
  i_TRS1_Setting : "UDT_TRS_Bas1dir_Sett";	//Data Structure: Setting Record TRS1
  i_TRS1_ID : DWORD ;	//ID Record HEX AAAA - ZZSS/OO.
  i_TRS1_DB_PLT : BLOCK_DB ;	//Data Structure: Position DataBlock TRS1 TRS1 TRS1 TRS1 TRS1 TRS1
  i_TRS1_CFG_Conv_Speed : INT  := 1000;	//CFG: [mm/sec] Conveyor Speed
  i_TRS1_CFG_Run_Out_Dist : INT  := 20;	//CFG: [cm] Run out distance for the section
  i_TRS1_CFG_Cnt_ESave : INT  := 300;	//CFG: [sec] Energy safe counter
  i_TRS1_IO_NOT_PEC : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TRS1_IO_LMS_NotPrsnt : BOOL ;	//HW: Section ASI LMS is not present
  i_TRS1_LMS_Error : BOOL ;	//HW: Section ASI LMS has an error
  i_TRS1_IO_LMS_Auto : BOOL ;	//HW: Switch of Local Motor Starter is in 'Automatic' position
  i_TRS1_IO_LMS_Healthy : BOOL ;	//HW: "Healthy signal" of Local Motor Starter
  i_TRS2_Setting : "UDT_TRS_Bas1dir_Sett";	//Data Structure: Setting Record TRS2
  i_TRS2_ID : DWORD ;	//ID Record HEX AAAA - ZZSS/OO.
  i_TRS2_DB_PLT : BLOCK_DB ;	//Data Structure: Position DataBlock TRS2 TRS2 TRS2 TRS2 TRS2 TRS2
  i_TRS2_CFG_Conv_Speed : INT  := 1000;	//CFG: [mm/sec] Conveyor Speed
  i_TRS2_CFG_Run_Out_Dist : INT  := 20;	//CFG: [cm] Run out distance for the section
  i_TRS2_IO_NOT_PEC : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TRS2_IO_LMS_NotPrsnt : BOOL ;	//HW: Section ASI LMS is not present
  i_TRS2_IO_LMS_Error : BOOL ;	//HW: Section ASI LMS has an error
  i_TRS2_IO_LMS_Auto : BOOL ;	//HW: Switch of Local Motor Starter is in 'Automatic' position
  i_TRS2_IO_LMS_Healthy : BOOL ;	//HW: "Healthy signal" of Local Motor Starter
  i_TRS3_Setting : "UDT_TRS_Bas1dir_Sett";	//Data Structure: Setting Record TRS3
  i_TRS3_ID : DWORD ;	//ID Record HEX AAAA - ZZSS/OO.
  i_TRS3_DB_PLT : BLOCK_DB ;	//Data Structure: Position DataBlock TRS3 TRS3 TRS3 TRS3 TRS3 TRS3
  i_TRS3_CFG_Conv_Speed : INT  := 1000;	//CFG: [mm/sec] Conveyor Speed
  i_TRS3_CFG_Run_Out_Dist : INT  := 20;	//CFG: [cm] Run out distance for the section
  i_TRS3_IO_NOT_PEC : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TRS3_IO_LMS_NotPrsnt : BOOL ;	//HW: Section ASI LMS is not present
  i_TRS3_IO_LMS_Error : BOOL ;	//HW: Section ASI LMS has an error
  i_TRS3_IO_LMS_Auto : BOOL ;	//HW: Switch of Local Motor Starter is in 'Automatic' position
  i_TRS3_IO_LMS_Healthy : BOOL ;	//HW: "Healthy signal" of Local Motor Starter
END_VAR
VAR_OUTPUT
  o_ST_Capacity_Too_Low : BOOL ;	//ST: The UQZ is reporting Capacity too low
  o_ST_Capacity_Too_High : BOOL ;	//ST: The UQZ is reporting Capacity too high
  o_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_ST_ASI_Error : BOOL ;	//ST: ASI slave has an error
  o_ST_SLC_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_ST_SLC_ASI_Error : BOOL ;	//ST: ASI slave has an error
  o_Capacity : INT ;	//Actual Value Capacity [items per hour] 
  o_Ready_To_Restart : BOOL ;	//Ready To Restart to system control
  o_PBB_IO_SL_Avail : BOOL ;	//HW: Signal Light Available
  o_TSO_ST_PEC_Blk : BOOL ;	//ST: PEC Blockage
  o_HCO_IO_SL : BOOL ;	//HW: Signal Light Height Check
  o_HCO_ST_Height_Error : BOOL ;	//ST: Height Check Error
  o_HCO_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_HCO_ST_ASI_Error : BOOL ;	//ST: ASI slave has an Error
  o_TRS1_IO_MTR_Fwd : BOOL ;	//HW: Run signal to motor forward of conveyor
  o_TRS1_IO_MTR_Rev : BOOL ;	//HW: Run signal to motor reverse of conveyor
  o_TRS1_IO_Disable_QS : BOOL ;	//HW: Disable quick stop function
  o_TRS1_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_TRS1_ST_ASI_Error : BOOL ;	//Status: LMS ASI slave has an error
  o_TRS1_ST_Items : BOOL ;	//ST: Items present on section
  o_TRS1_ST_Running : BOOL ;	//ST: Section is running
  o_TRS1_ST_Started : BOOL ;	//ST: Started
  o_TRS1_ST_Req_Halt : BOOL ;	//ST: Request Halt
  o_TRS1_ST_Req_Stop : BOOL ;	//ST: Request Stop
  o_TRS1_ST_Not_Auto : BOOL ;	//ST: The local motor starter is reporting not Automatic
  o_TRS1_ST_Not_Hthy : BOOL ;	//ST: The local motor starter is reporting not Healthy
  o_TRS1_ST_PEC_Blk : BOOL ;	//ST: PEC Blockage
  o_TRS1_EXT_Outputs : "UDT_External_Outputs";	//External Outputsssssss
  o_TRS2_IO_MTR_Fwd : BOOL ;	//HW: Run signal to motor forward of conveyor
  o_TRS2_IO_MTR_Rev : BOOL ;	//HW: Run signal to motor reverse of conveyor
  o_TRS2_IO_Disable_QS : BOOL ;	//HW: Disable quick stop function
  o_TRS2_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_TRS2_ST_ASI_Error : BOOL ;	//ST: LMS ASI slave has an error
  o_TRS2_ST_Items : BOOL ;	//ST: Items present on section
  o_TRS2_ST_Running : BOOL ;	//ST: Section is running
  o_TRS2_ST_Started : BOOL ;	//ST: Started
  o_TRS2_ST_Req_Halt : BOOL ;	//ST: Request Halt
  o_TRS2_ST_Req_Stop : BOOL ;	//ST: Request Stop
  o_TRS2_ST_Not_Automatic : BOOL ;	//ST: The motor is reporting not Automatic
  o_TRS2_ST_Not_Healthy : BOOL ;	//ST: The motor is reporting not Healthy
  o_TRS2_ST_PEC_Blk : BOOL ;	//ST: PEC Blockage
  o_TRS2_EXT_Outputs : "UDT_External_Outputs";	//External Outputsssssss
  o_TRS3_IO_MTR_Fwd : BOOL ;	//HW: Run signal to motor forward of conveyor
  o_TRS3_IO_MTR_Rev : BOOL ;	//HW: Run signal to motor reverse of conveyor
  o_TRS3_IO_Disable_QS : BOOL ;	//HW: Disable quick stop function
  o_TRS3_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_TRS3_ST_ASI_Err : BOOL ;	//ST: ASI slave has an error
  o_TRS3_ST_Items : BOOL ;	//ST: Items present on section
  o_TRS3_ST_Running : BOOL ;	//ST: Section is running
  o_TRS3_ST_Started : BOOL ;	//ST: Started
  o_TRS3_ST_Req_Halt : BOOL ;	//ST: Request Halt
  o_TRS3_ST_Req_Stop : BOOL ;	//ST: Request Stop
  o_TRS3_ST_LMS_Not_Auto : BOOL ;	//ST: The local motor starter is reporting not Automatic
  o_TRS3_ST_LMS_Not_Hthy : BOOL ;	//ST: The local motor starter is reporting not Healthy
  o_TRS3_ST_PEC_Blk : BOOL ;	//ST: PEC Blockage
  o_TRS3_EXT_Outputs : "UDT_External_Outputs";	//External Outputsssssss
END_VAR
VAR
  s_TRS1 : "UDT_TRS_Int_Prog";	
  s_TRS1_FB_EQP_PEC : "FB_EQP_PEC";	
  s_TRS1_FB_Trigg_PEC : "FB_EQP_PEC_Trigger";	
  s_TRS1_FB_EQP_Basic : "FB_EQP_Basic";	
  s_TRS1_FB_HW_MTR_LMS : "FB_HW_MTR_LMS";	
  s_FB_DAT_TRS1 : "FB_DAT";	//Block call static FB_DAT_SAC
  s_TRS1_Ready_To_Restart : BOOL ;	
  s_TRS1_Ext_Req_Stop : BOOL ;	//request from external to stop conveyor
  s_TRS2 : "UDT_TRS_Int_Prog";	
  s_TRS2_FB_EQP_PEC : "FB_EQP_PEC";	
  s_TRS2_FB_EQP_Basic : "FB_EQP_Basic";	
  s_TRS2_FB_HW_MTR_LMS : "FB_HW_MTR_LMS";	
  s_FB_DAT_TRS2 : "FB_DAT";	//Block call static FB_DAT_SAC
  s_TRS2_Ready_To_Restart : BOOL ;	
  s_TRS2_Ext_Req_Stop : BOOL ;	//request from external to stop conveyor
  s_TRS3 : "UDT_TRS_Int_Prog";	
  s_TRS3_FB_EQP_PEC : "FB_EQP_PEC";	
  s_TRS3_FB_EQP_Basic : "FB_EQP_Basic";	
  s_TRS3_FB_HW_MTR_LMS : "FB_HW_MTR_LMS";	
  s_FB_DAT_TRS3 : "FB_DAT";	//Block call static FB_DAT_SAC
  s_TRS3_Ext_Req_Stop : BOOL ;	//request from external to stop conveyor
  s_TRS3_Ready_To_Restart : BOOL ;	
  s_UQZ_Error : BOOL ;	//UQZ error
  s_UQZ_Disabled : BOOL ;	//UQZ is disabled
  s_TRS1_PEC_Flap_Filter : BOOL ;	//flap filter including delay on leading edge of product
  s_TRS1_Ext_Req_Rst_ESave : BOOL ;	//request from external to reset energy saving
  s_Calculated_H2H_Length : INT ;	//calculated head to head length
  s_Disable_Calculate_H2H : BOOL ;	//disable calculation of head to head length
  s_FB_HCO : "FB_Height_Check";	
  s_Capacity_Actual_Value : INT ;	//Capacity [items per hour] Actual Value
  s_TRS1_Request_Halt : BOOL ;	//Request halt signal equipment
  s_FB_HCO_HW : "FB_HW_ASi";	//Data structure:
  s_Req_HCO_SL : BOOL ;	//Request to Hardware driver for HCO signal lamp
END_VAR
VAR_TEMP
  t_INT_Not_Used : INT ;	
  t_Not_Used_bool : BOOL ;	//Dummy Bool which is not used.
  t_TRS_Start_Up_Dist : INT ;	//Calculated start-up distance = run-out / 2
END_VAR
BEGIN
NETWORK
TITLE =AA: Handle Electrical Input statuses
//Some errors and statuses are coming directly from electrical inputs.
//If the IO becomes not available, those inputs must be ignored, to avoid 
//(as consequence of) all kind of meaningless status changes, 
//which are indicated to HMI.
//
//REMARK: The status bit must be used in the application instead of 
//        the input itself.
      NOP   0; 
// PBB ASI Not Present / Error
      O     #i_CMD_Reset; // Reset ASI PBB errors
      ON    #i_Available_IO; 
      R     #o_ST_ASI_NotPrsnt; 
      R     #o_ST_ASI_Error; 

      A     #i_PBB_ASI_NotPrsnt; // Set ASI PBB errors
      A     #i_Available_IO; 
      S     #o_ST_ASI_NotPrsnt; 

      A     #i_PBB_ASI_Err; 
      A     #i_Available_IO; 
      S     #o_ST_ASI_Error; 

      O     #i_CMD_Reset; // Reset ASI PBB Height Check errors
      ON    #i_Available_IO; 
      R     #o_ST_SLC_ASI_NotPrsnt; 
      R     #o_ST_SLC_ASI_Error; 

      A     #i_HCO_SLC_ASI_NotPrsnt; // Set ASI PBB Height Check errors
      A     #i_Available_IO; 
      S     #o_ST_SLC_ASI_NotPrsnt; 

      A     #i_HCO_SLC_ASI_Err; 
      A     #i_Available_IO; 
      S     #o_ST_SLC_ASI_Error; 
NETWORK
TITLE =BA: Trigger Energy Saving UQZ

      CALL #s_TRS1_FB_Trigg_PEC (
           i_CFG_Blockage_Length    := #i_TSO_CFG_Block_Len,
           i_CFG_Delay_On_Filter    := 500,
           i_CFG_Reset_Block_PEC_Oc := FALSE,
           i_CFG_Time_Displacement  := FALSE,
           i_IO_NOT_PEC             := #i_TSO_IO_NOT_PEC,
           i_Eqp_Available_IO       := #i_Available_IO,
           i_CMD_Reset              := #i_CMD_Reset,
           i_Displacement           := #t_INT_Not_Used,
           o_ST_PEC_Blk             := #o_TSO_ST_PEC_Blk,
           o_PEC_Flap_Filter        := #s_TRS1_PEC_Flap_Filter);

NETWORK
TITLE =CA: Height Check Object on TRS1

      CALL #s_FB_HCO (
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_CFG_Delay_On_Filter    := 20,
           i_CMD_Enable             := #i_CMD_Enable,
           i_Available_IO           := #i_Available_IO,
           i_IO_NOT_PEC_Height      := #i_HCO_IO_NOT_PEC_HGHT,
           i_PB_IO_Reset_Height_Chk := #i_HCO_IO_PB_Reset_H_Chk,
           o_IO_SL                  := #s_Req_HCO_SL,
           o_ST_Height_Error        := #o_HCO_ST_Height_Error);


      CALL #s_FB_HCO_HW (
           i_Req_Output_1           := #s_Req_HCO_SL,
           i_Req_Output_2           := FALSE,
           i_Req_Output_3           := FALSE,
           i_Req_Output_4           := FALSE,
           i_CMD_Reset              := #i_CMD_Reset,
           i_Available_IO           := #i_Available_IO,
           i_ASI_NotPrsnt           := #i_HCO_ASI_NotPrsnt,
           i_Slave_Error            := #i_HCO_ASI_Er,
           i_CFG_Delay_Time         := 0,
           o_ST_ASI_NotPrsnt        := #o_HCO_ST_ASI_NotPrsnt,
           o_ST_ASI_Error           := #o_HCO_ST_ASI_Error,
           o_IO_Output_1            := #o_HCO_IO_SL,
           o_IO_Output_2            := #t_Not_Used_bool,
           o_IO_Output_3            := #t_Not_Used_bool,
           o_IO_Output_4            := #t_Not_Used_bool);

NETWORK
TITLE =DA: TRS1 Unloading conveyor

      CALL #s_TRS1_FB_EQP_PEC (
           i_Setting                := #i_TRS1_Setting.PEC_1D,
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_Dwnstr_PLT_Pos         := 0,
           i_CFG_Blockage_Length    := 300,
           i_CFG_Delay_On_Filter    := 0,
           i_CFG_Delay_Off_Filter   := 20,
           i_CFG_Min_Product_Length := 0,
           i_CFG_Preset_PEC_Latch   := FALSE,
           i_CFG_Track_Present      := FALSE,
           i_CFG_Reset_Block_PEC_Oc := FALSE,
           i_IO_NOT_PEC             := #i_TRS1_IO_NOT_PEC,
           i_Eqp_Available_IO       := #i_Available_IO,
           i_CMD_Reset              := #i_CMD_Reset,
           o_LPOS                   := #s_TRS1.LPOS,
           o_PEC_Position           := #s_TRS1.PEC_Offset,
           o_ST_PEC_Blk             := #o_TRS1_ST_PEC_Blk);

//Calculated standard start-up for section
      L     #i_TRS1_CFG_Run_Out_Dist; 
      L     2; 
      /I    ; 
      T     #t_TRS_Start_Up_Dist; 

      A     #o_TRS1_ST_PEC_Blk; 
      O     #o_TRS1_ST_ASI_NotPrsnt; 
      O     #o_TRS1_ST_ASI_Error; 
      O     #o_TRS1_ST_Not_Auto; 
      O     #o_TRS1_ST_Not_Hthy; 
      =     #s_TRS1_Ext_Req_Stop; 

      A     #s_TRS1_PEC_Flap_Filter; 
      O     #i_PB_IO_Restart; 
      =     #s_TRS1_Ext_Req_Rst_ESave; // THEN request reset energy save

      A     #o_HCO_ST_Height_Error; 
      =     #s_TRS1_Request_Halt; 

      CALL #s_TRS1_FB_EQP_Basic (
           i_ID_Section             := #i_TRS1_ID,
           i_Setting                := #i_TRS1_Setting.Basic,
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_DB_PLT_DwnStr          := #i_TRS2_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_CFG_Conveyor_Speed     := #i_TRS1_CFG_Conv_Speed,
           i_CFG_Run_Out_Distance   := #i_TRS1_CFG_Run_Out_Dist,
           i_CFG_Start_Up_Distance  := #t_TRS_Start_Up_Dist,
           i_CFG_Minimum_Gap        := 0,
           i_CFG_Add_Gap_Stop       := 0,
           i_CFG_Minimum_H2H        := 0,
           i_CFG_Add_H2H_Stop       := 0,
           i_CFG_Cascade_Delay_Time := 1000,
           i_CFG_Strt_Up_T_E_Save   := "DB_Setting".common.Start_Up_Time_E_Save,
           i_CFG_Run_Out_E_Save     := #i_TRS1_CFG_Cnt_ESave,
           i_CFG_Stop_T_E_Save      := "DB_Setting".common.Stop_Time_E_Save,
           i_CFG_Disbl_E_Save       := "DB_Setting".common.Disable_Energy_Saving,
           i_CFG_Slave_Mode         := FALSE,
           i_PPI_Displacement       := 0,
           i_Dwnstr_PLT_Pos         := #s_TRS1.PEC_Offset,
           i_Available_IO           := #i_Available_IO,
           i_Safety_OK              := #i_Safety_OK,
           i_CMD_Enable             := #i_CMD_Enable,
           i_CMD_Start              := #i_CMD_Start,
           i_Ext_Req_Stop           := #s_TRS1_Ext_Req_Stop,
           i_Ext_Req_Halt           := #s_TRS1_Request_Halt,
           i_Ext_Req_Dis_Send       := FALSE,
           i_Ext_Req_Rst_ESave      := #s_TRS1_Ext_Req_Rst_ESave,
           i_OS_Direction_Change    := FALSE,
           o_External               := #o_TRS1_EXT_Outputs,
           o_Motor_Run              := #s_TRS1.Motor_Run,
           o_ST_Items               := #o_TRS1_ST_Items,
           o_ST_Running             := #o_TRS1_ST_Running,
           o_ST_Started             := #o_TRS1_ST_Started,
           o_ST_Request_Halt        := #o_TRS1_ST_Req_Halt,
           o_ST_Request_Stop        := #o_TRS1_ST_Req_Stop,
           o_Ready_To_Restart       := #s_TRS1_Ready_To_Restart);

      CALL #s_TRS1_FB_HW_MTR_LMS (
           i_CMD_Send_Stat          := #i_CMD_Send_Stat,
           i_Event_DB               := "DB_Event_Section",
           i_Available_IO           := #i_Available_IO,
           i_Quick_Stop             := FALSE,
           i_LMS_NotPrsnt           := #i_TRS1_IO_LMS_NotPrsnt,
           i_LMS_Error              := #i_TRS1_LMS_Error,
           i_IO_LMS_Auto            := #i_TRS1_IO_LMS_Auto,
           i_IO_LMS_Healthy         := #i_TRS1_IO_LMS_Healthy,
           i_CMD_Reset              := #i_CMD_Reset,
           i_CMD_Req_Motor_Forward  := #s_TRS1.Motor_Run,
           o_IO_MTR_Fwd             := #o_TRS1_IO_MTR_Fwd,
           o_IO_MTR_Rev             := #o_TRS1_IO_MTR_Rev,
           o_IO_MTR_Dis_Quick_Stop  := #o_TRS1_IO_Disable_QS,
           o_ST_ASI_NotPrsnt        := #o_TRS1_ST_ASI_NotPrsnt,
           o_ST_ASI_Err             := #o_TRS1_ST_ASI_Error,
           o_ST_LMS_Not_Auto        := #o_TRS1_ST_Not_Auto,
           o_ST_LMS_Not_Hthy        := #o_TRS1_ST_Not_Hthy);

      CALL #s_FB_DAT_TRS1 (
           i_ID_Section             := #i_TRS1_ID,
           i_DB_Event               := "DB_Event_Section",
           i_PLC_FIFO_DB            := "DB_Send_FIFO",
           i_PLC_Log_FIFO_DB        := "DB_LOG_Event_FIFO",
           i_Degraded_Mode          := "M_Comm_Degraded",
           i_CFG_BPI_Log_Level      := "DB_Setting".common.External_Log_Level,
           i_CFG_PLC_Log_Level      := "DB_Setting".common.Internal_Log_Level,
           i_CFG_PLC_Log_SAC_Mesgs  := FALSE,
           i_CFG_PLC_LOG_BPI_Stat   := FALSE);

NETWORK
TITLE =EA: TRS2 Transport section 2

      CALL #s_TRS2_FB_EQP_PEC (
           i_Setting                := #i_TRS2_Setting.PEC_1D,
           i_DB_PLT                 := #i_TRS2_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_Dwnstr_PLT_Pos         := 0,
           i_CFG_Blockage_Length    := 300,
           i_CFG_Delay_On_Filter    := 0,
           i_CFG_Delay_Off_Filter   := 20,
           i_CFG_Min_Product_Length := 0,
           i_CFG_Preset_PEC_Latch   := FALSE,
           i_CFG_Track_Present      := FALSE,
           i_CFG_Reset_Block_PEC_Oc := FALSE,
           i_IO_NOT_PEC             := #i_TRS2_IO_NOT_PEC,
           i_Eqp_Available_IO       := #i_Available_IO,
           i_CMD_Reset              := #i_CMD_Reset,
           o_LPOS                   := #s_TRS2.LPOS,
           o_PEC_Position           := #s_TRS2.PEC_Offset,
           o_ST_PEC_Blk             := #o_TRS2_ST_PEC_Blk);

//Calculated standard start-up for section
      L     #i_TRS2_CFG_Run_Out_Dist; 
      L     2; 
      /I    ; 
      T     #t_TRS_Start_Up_Dist; 

      A     #o_TRS2_ST_PEC_Blk; 
      O     #o_TRS2_ST_ASI_NotPrsnt; 
      O     #o_TRS2_ST_ASI_Error; 
      O     #o_TRS2_ST_Not_Automatic; 
      O     #o_TRS2_ST_Not_Healthy; 
      =     #s_TRS2_Ext_Req_Stop; 

      CALL #s_TRS2_FB_EQP_Basic (
           i_ID_Section             := #i_TRS2_ID,
           i_Setting                := #i_TRS2_Setting.Basic,
           i_DB_PLT                 := #i_TRS2_DB_PLT,
           i_DB_PLT_DwnStr          := #i_TRS3_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_CFG_Conveyor_Speed     := #i_TRS2_CFG_Conv_Speed,
           i_CFG_Run_Out_Distance   := #i_TRS2_CFG_Run_Out_Dist,
           i_CFG_Start_Up_Distance  := #t_TRS_Start_Up_Dist,
           i_CFG_Minimum_Gap        := 0,
           i_CFG_Add_Gap_Stop       := 0,
           i_CFG_Minimum_H2H        := 0,
           i_CFG_Add_H2H_Stop       := 0,
           i_CFG_Cascade_Delay_Time := 1000,
           i_CFG_Strt_Up_T_E_Save   := "DB_Setting".common.Start_Up_Time_E_Save,
           i_CFG_Run_Out_E_Save     := "DB_Setting".common.Run_Out_Time_E_Save,
           i_CFG_Stop_T_E_Save      := "DB_Setting".common.Stop_Time_E_Save,
           i_CFG_Disbl_E_Save       := "DB_Setting".common.Disable_Energy_Saving,
           i_CFG_Slave_Mode         := FALSE,
           i_PPI_Displacement       := 0,
           i_Dwnstr_PLT_Pos         := #s_TRS2.PEC_Offset,
           i_Available_IO           := #i_Available_IO,
           i_Safety_OK              := #i_Safety_OK,
           i_CMD_Enable             := #i_CMD_Enable,
           i_CMD_Start              := #i_CMD_Start,
           i_Ext_Req_Stop           := #s_TRS2_Ext_Req_Stop,
           i_Ext_Req_Halt           := FALSE,
           i_Ext_Req_Dis_Send       := FALSE,
           i_Ext_Req_Rst_ESave      := FALSE,
           i_OS_Direction_Change    := FALSE,
           o_External               := #o_TRS2_EXT_Outputs,
           o_Motor_Run              := #s_TRS2.Motor_Run,
           o_ST_Items               := #o_TRS2_ST_Items,
           o_ST_Running             := #o_TRS2_ST_Running,
           o_ST_Started             := #o_TRS2_ST_Started,
           o_ST_Request_Halt        := #o_TRS2_ST_Req_Halt,
           o_ST_Request_Stop        := #o_TRS2_ST_Req_Stop,
           o_Ready_To_Restart       := #s_TRS2_Ready_To_Restart);

      CALL #s_TRS2_FB_HW_MTR_LMS (
           i_CMD_Send_Stat          := #i_CMD_Send_Stat,
           i_Event_DB               := "DB_Event_Section",
           i_Available_IO           := #i_Available_IO,
           i_Quick_Stop             := FALSE,
           i_LMS_NotPrsnt           := #i_TRS2_IO_LMS_NotPrsnt,
           i_LMS_Error              := #i_TRS2_IO_LMS_Error,
           i_IO_LMS_Auto            := #i_TRS2_IO_LMS_Auto,
           i_IO_LMS_Healthy         := #i_TRS2_IO_LMS_Healthy,
           i_CMD_Reset              := #i_CMD_Reset,
           i_CMD_Req_Motor_Forward  := #s_TRS2.Motor_Run,
           o_IO_MTR_Fwd             := #o_TRS2_IO_MTR_Fwd,
           o_IO_MTR_Rev             := #o_TRS2_IO_MTR_Rev,
           o_IO_MTR_Dis_Quick_Stop  := #o_TRS2_IO_Disable_QS,
           o_ST_ASI_NotPrsnt        := #o_TRS2_ST_ASI_NotPrsnt,
           o_ST_ASI_Err             := #o_TRS2_ST_ASI_Error,
           o_ST_LMS_Not_Auto        := #o_TRS2_ST_Not_Automatic,
           o_ST_LMS_Not_Hthy        := #o_TRS2_ST_Not_Healthy);

      CALL #s_FB_DAT_TRS2 (
           i_ID_Section             := #i_TRS2_ID,
           i_DB_Event               := "DB_Event_Section",
           i_PLC_FIFO_DB            := "DB_Send_FIFO",
           i_PLC_Log_FIFO_DB        := "DB_LOG_Event_FIFO",
           i_Degraded_Mode          := "M_Comm_Degraded",
           i_CFG_BPI_Log_Level      := "DB_Setting".common.External_Log_Level,
           i_CFG_PLC_Log_Level      := "DB_Setting".common.Internal_Log_Level,
           i_CFG_PLC_Log_SAC_Mesgs  := FALSE,
           i_CFG_PLC_LOG_BPI_Stat   := FALSE);

NETWORK
TITLE =EA: Calculate H2H Distance according i_UQZ_CMD_Capacity

      L     #i_CMD_Capacity; 
      L     0; 
      >I    ; 
      JCN   EA01; 

      L     #i_CMD_Capacity; 
      T     #s_Capacity_Actual_Value; 

EA01: NOP   0; 

      CALL "FC_Calc_H2H_Distance" (
           i_CFG_Conveyor_Speed     := #i_CFG_Conv_Speed_Dwn,
           i_CFG_Capacity           := #s_Capacity_Actual_Value,
           i_CFG_Minimum_Capacity   := #i_CFG_Min_Capacity,
           i_CFG_Maximum_Capacity   := #i_CFG_Max_Capacity,
           o_H2H_Length             := #s_Calculated_H2H_Length,
           o_Current_Capacity       := #o_Capacity,
           o_ST_Capacity_2Low       := #o_ST_Capacity_Too_Low,
           o_ST_Capacity_2High      := #o_ST_Capacity_Too_High,
           o_ST_CalcH2H_Disable     := #s_Disable_Calculate_H2H);

NETWORK
TITLE =FA: TRS3 Transport section 3

      CALL #s_TRS3_FB_EQP_PEC (
           i_Setting                := #i_TRS3_Setting.PEC_1D,
           i_DB_PLT                 := #i_TRS3_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_Dwnstr_PLT_Pos         := 0,
           i_CFG_Blockage_Length    := 300,
           i_CFG_Delay_On_Filter    := 0,
           i_CFG_Delay_Off_Filter   := 20,
           i_CFG_Min_Product_Length := 0,
           i_CFG_Preset_PEC_Latch   := FALSE,
           i_CFG_Track_Present      := FALSE,
           i_CFG_Reset_Block_PEC_Oc := FALSE,
           i_IO_NOT_PEC             := #i_TRS3_IO_NOT_PEC,
           i_Eqp_Available_IO       := #i_Available_IO,
           i_CMD_Reset              := #i_CMD_Reset,
           o_LPOS                   := #s_TRS3.LPOS,
           o_PEC_Position           := #s_TRS3.PEC_Offset,
           o_ST_PEC_Blk             := #o_TRS3_ST_PEC_Blk);

//Calculated standard start-up for section
      L     #i_TRS3_CFG_Run_Out_Dist; 
      L     2; 
      /I    ; 
      T     #t_TRS_Start_Up_Dist; 

      A     #o_TRS3_ST_PEC_Blk; 
      O     #o_TRS3_ST_ASI_NotPrsnt; 
      O     #o_TRS3_ST_ASI_Err; 
      O     #o_TRS3_ST_LMS_Not_Auto; 
      O     #o_TRS3_ST_LMS_Not_Hthy; 
      =     #s_TRS3_Ext_Req_Stop; 

      CALL #s_TRS3_FB_EQP_Basic (
           i_ID_Section             := #i_TRS3_ID,
           i_Setting                := #i_TRS3_Setting.Basic,
           i_DB_PLT                 := #i_TRS3_DB_PLT,
           i_DB_PLT_DwnStr          := #i_CFG_DB_PLT_DwnStr,
           i_DB_Event               := "DB_Event_Section",
           i_CFG_Conveyor_Speed     := #i_TRS3_CFG_Conv_Speed,
           i_CFG_Run_Out_Distance   := #i_TRS3_CFG_Run_Out_Dist,
           i_CFG_Start_Up_Distance  := #t_TRS_Start_Up_Dist,
           i_CFG_Minimum_Gap        := 0,
           i_CFG_Add_Gap_Stop       := 0,
           i_CFG_Minimum_H2H        := #s_Calculated_H2H_Length,
           i_CFG_Add_H2H_Stop       := 0,
           i_CFG_Cascade_Delay_Time := 1000,
           i_CFG_Strt_Up_T_E_Save   := "DB_Setting".common.Start_Up_Time_E_Save,
           i_CFG_Run_Out_E_Save     := "DB_Setting".common.Run_Out_Time_E_Save,
           i_CFG_Stop_T_E_Save      := "DB_Setting".common.Stop_Time_E_Save,
           i_CFG_Disbl_E_Save       := "DB_Setting".common.Disable_Energy_Saving,
           i_CFG_Slave_Mode         := FALSE,
           i_PPI_Displacement       := 0,
           i_Dwnstr_PLT_Pos         := #s_TRS3.PEC_Offset,
           i_Available_IO           := #i_Available_IO,
           i_Safety_OK              := #i_Safety_OK,
           i_CMD_Enable             := #i_CMD_Enable,
           i_CMD_Start              := #i_CMD_Start,
           i_Ext_Req_Stop           := #s_TRS3_Ext_Req_Stop,
           i_Ext_Req_Halt           := FALSE,
           i_Ext_Req_Dis_Send       := FALSE,
           i_Ext_Req_Rst_ESave      := FALSE,
           i_OS_Direction_Change    := FALSE,
           o_External               := #o_TRS3_EXT_Outputs,
           o_Motor_Run              := #s_TRS3.Motor_Run,
           o_ST_Items               := #o_TRS3_ST_Items,
           o_ST_Running             := #o_TRS3_ST_Running,
           o_ST_Started             := #o_TRS3_ST_Started,
           o_ST_Request_Halt        := #o_TRS3_ST_Req_Halt,
           o_ST_Request_Stop        := #o_TRS3_ST_Req_Stop,
           o_Ready_To_Restart       := #s_TRS3_Ready_To_Restart);

      CALL #s_TRS3_FB_HW_MTR_LMS (
           i_CMD_Send_Stat          := #i_CMD_Send_Stat,
           i_Event_DB               := "DB_Event_Section",
           i_Available_IO           := #i_Available_IO,
           i_Quick_Stop             := FALSE,
           i_LMS_NotPrsnt           := #i_TRS3_IO_LMS_NotPrsnt,
           i_LMS_Error              := #i_TRS3_IO_LMS_Error,
           i_IO_LMS_Auto            := #i_TRS3_IO_LMS_Auto,
           i_IO_LMS_Healthy         := #i_TRS3_IO_LMS_Healthy,
           i_CMD_Reset              := #i_CMD_Reset,
           i_CMD_Req_Motor_Forward  := #s_TRS3.Motor_Run,
           o_IO_MTR_Fwd             := #o_TRS3_IO_MTR_Fwd,
           o_IO_MTR_Rev             := #o_TRS3_IO_MTR_Rev,
           o_IO_MTR_Dis_Quick_Stop  := #o_TRS3_IO_Disable_QS,
           o_ST_ASI_NotPrsnt        := #o_TRS3_ST_ASI_NotPrsnt,
           o_ST_ASI_Err             := #o_TRS3_ST_ASI_Err,
           o_ST_LMS_Not_Auto        := #o_TRS3_ST_LMS_Not_Auto,
           o_ST_LMS_Not_Hthy        := #o_TRS3_ST_LMS_Not_Hthy);

      CALL #s_FB_DAT_TRS3 (
           i_ID_Section             := #i_TRS3_ID,
           i_DB_Event               := "DB_Event_Section",
           i_PLC_FIFO_DB            := "DB_Send_FIFO",
           i_PLC_Log_FIFO_DB        := "DB_LOG_Event_FIFO",
           i_Degraded_Mode          := "M_Comm_Degraded",
           i_CFG_BPI_Log_Level      := "DB_Setting".common.External_Log_Level,
           i_CFG_PLC_Log_Level      := "DB_Setting".common.Internal_Log_Level,
           i_CFG_PLC_Log_SAC_Mesgs  := FALSE,
           i_CFG_PLC_LOG_BPI_Stat   := FALSE);

NETWORK
TITLE =GA: Status report Disabled
//LAD!
      ON    #o_TRS1_ST_Started; 
      ON    #o_TRS2_ST_Started; 
      ON    #o_TRS3_ST_Started; 
      O     #s_Disable_Calculate_H2H; 
      =     #s_UQZ_Disabled; 
NETWORK
TITLE =HA: Status report Error
//LAD!
      O     #s_TRS1_Ext_Req_Stop; 
      O     #s_TRS2_Ext_Req_Stop; 
      O     #s_TRS3_Ext_Req_Stop; 
      ON    #i_Available_IO; 
      O     #o_ST_ASI_NotPrsnt; 
      O     #o_ST_ASI_Error; 
      O     #o_ST_SLC_ASI_NotPrsnt; 
      O     #o_ST_SLC_ASI_Error; 
      O     #o_HCO_ST_ASI_Error; 
      O     #o_HCO_ST_ASI_NotPrsnt; 
      =     #s_UQZ_Error; 
NETWORK
TITLE =IA: Available signal light if UQZ is Available or in Error
//LAD!
      A     #o_TRS1_ST_Started; 
      A     #o_TRS2_ST_Started; 
      A     #o_TRS3_ST_Started; 
      AN    #o_ST_ASI_NotPrsnt; 
      AN    #o_ST_ASI_Error; 
      AN    #o_ST_SLC_ASI_NotPrsnt; 
      AN    #o_ST_SLC_ASI_Error; 
      AN    #o_HCO_ST_ASI_Error; 
      AN    #o_HCO_ST_ASI_NotPrsnt; 
      AN    #s_UQZ_Disabled; 
      O     ; 
      A     #s_UQZ_Error; 
      A     "M_System_Clock_1.0_sec."; 
      =     #o_PBB_IO_SL_Avail; 
NETWORK
TITLE =JA: Zone signals
//LAD!
      O     #s_TRS1_Ready_To_Restart; 
      O     #s_TRS2_Ready_To_Restart; 
      O     #s_TRS3_Ready_To_Restart; 
      =     #o_Ready_To_Restart; 
END_FUNCTION_BLOCK

