FUNCTION "FC_Reg_LNK_In_PLT" : VOID
TITLE =%version: 0.02 % CN: 33
//Function:
//This FC makes and Register a LNK with LIC or TIC into PLT DB. 
//
//Description:
//When an Leading edge is found in first entry without data, a new LNK with LIC 
//or TIC 
//is generated and 
//assigned to the entry in the PLT DB.
//                                                             
//History:
//This version  %created_by:  nlhdl %
//              %date_created:  maandag 6 juli 2015 10:33:45 %
//              %release:  VI_CONV/RA_Dev_Oakham %
//
//Modification History:                                   By:    Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.02
//19518: Block call update of FC_xxx_Record             nltny    07-08-14   0.02
//Initial Version based on version 1.05 ECS-P GEN       nlHHop   01-04-14   0.01
//
FAMILY : VIBES
VERSION : 0.0


VAR_INPUT
  i_DB_PLT_Num : INT ;	//Number of DB Position Leading Trailing Edge
  i_Default_Record : INT ;	//Number of default record to be used to create link.
  i_DB_Event_Num : INT ;	//Number of DB event
END_VAR
VAR_TEMP
  t_DB_PLT : INT ;	//Number of PLT DB
  t_position : INT ;	//Position entry in PLT DB
  t_Info : INT ;	//Info entry in PLT DB
  t_Link : INT ;	//Link entry in PLT DB
  t_LNK : INT ;	//New LNK number which was generated
  t_DB_Event_Nr : INT ;	//Number of DB Event
  t_Return_Value_Int : INT ;	//Dummy return value
  t_ECS : INT ;	//ECS number of new generated LNK  
  t_Entrie2 : BOOL ;	//Entrie2 is without link
END_VAR
BEGIN
NETWORK
TITLE =AA: Read PLT Header (Record 1)

      L     #i_DB_PLT_Num; 
      T     #t_DB_PLT; // Determine PLT block DB number

      OPN   DB [#t_DB_PLT]; 

      L     DBW   14; 
      T     #t_position; 

      L     DBW   18; 
      T     #t_Info; 

      L     DBW   20; 
      T     #t_Link; 

      SET   ; 
      R     #t_Entrie2; 

      L     #i_DB_Event_Num; 
      T     #t_DB_Event_Nr; 
NETWORK
TITLE =BA: Read PLT Header (Record 2)

      L     #t_Info; 
      L     1; 
      <>I   ; 
      JCN   BA99; 

//If No Leading edge then check 2e entry
      OPN   DB [#t_DB_PLT]; 

      L     DBW   22; 
      T     #t_position; 

      L     DBW   26; 
      T     #t_Info; 

      L     DBW   28; 
      T     #t_Link; 

      SET   ; 
      S     #t_Entrie2; 

BA99: NOP   0; 
NETWORK
TITLE =DA: Create LNK and write in PLT DB

      L     #t_Info; 
      L     1; 
      ==I   ; 
      JCN   DA99; 

      L     #t_Link; 
      L     0; 
      ==I   ; 
      JCN   DA99; 

//Create new Records for default LNK record. ECS, LIC or NIR or TIC with LNK number
      CALL "FC_Gen_Default_LNK" (
           i_LNK                    := 0,
           i_Default_Record         := #i_Default_Record,
           i_DB_Event_Num           := #t_DB_Event_Nr,
           o_LNK                    := #t_LNK);

//Check if entry 1 or 2 is leading and write LNK number into PLT DB
      OPN   DB [#t_DB_PLT]; 
      L     #t_LNK; 
      A     #t_Entrie2; 
      JCN   DA03; 

      T     DBW   28; 

      JU    DA04; 

DA03: T     DBW   20; 

//Write PLT number into LNK record
DA04: CALL "FC_Write_Int_Record" (
           i_Record_Number          := #t_LNK,
           i_P_INT_Record           := "DB_UDT_LNK_Record".DB_PLT_Number,
           i_DB                     := "DB_LNK_List",
           i_INT                    := #t_DB_PLT,
           i_DB_Event_Num           := #t_DB_Event_Nr);

//Write Register event
      CALL "FC_Read_Int_Record" (
           i_Record_Number          := #t_LNK,
           i_P_INT_Record           := "DB_UDT_LNK_Record".ECS,
           i_DB                     := "DB_LNK_List",
           i_DB_Event_Num           := #t_DB_Event_Nr,
           o_INT                    := #t_ECS);

//Set expected item bit on true
      CALL "FC_Write_BOOL_Record" (
           i_Record_Number          := #t_ECS,
           i_P_BOOL_Record          := "DB_UDT_ECS_Record".CIR.Expected_Item,
           i_DB                     := "DB_ECS_List",
           i_BOOL                   := TRUE,
           i_DB_Event_Num           := #t_DB_Event_Nr);

      CALL "FC_Write_BOOL_Record" (
           i_Record_Number          := #t_ECS,
           i_P_BOOL_Record          := "DB_UDT_ECS_Record".CIR.Unexpected_Item,
           i_DB                     := "DB_ECS_List",
           i_BOOL                   := FALSE,
           i_DB_Event_Num           := #t_DB_Event_Nr);

      CALL "FC_Write_BOOL_Record" (
           i_Record_Number          := #t_ECS,
           i_P_BOOL_Record          := "DB_UDT_ECS_Record".CIR.Hand_Over,
           i_DB                     := "DB_ECS_List",
           i_BOOL                   := FALSE,
           i_DB_Event_Num           := #t_DB_Event_Nr);

      CALL "FC_Write_Event" (// Report Registerpackage (1205)
           i_Message_ID             := 1205,
           i_Event_value            := #t_LNK,
           i_DB_Event_Num           := #t_DB_Event_Nr,
           o_Return_Value           := #t_Return_Value_Int);

DA99: NOP   0; 

END_FUNCTION

