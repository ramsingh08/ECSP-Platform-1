FUNCTION_BLOCK "FB_System"
TITLE =%version: 0.12 % CN: 80
//Function:
//
//Template how to build a System layer.
//Including: 
//- Safety
//- Cabinet manager CCC
//- Cabinet manager LCC
//- IO_Available 
//- System Control
//- Area
//- Status Manager
//- OP Controller
//
//Description:                                  
//This is how the system layer should be build.
//
//History:
//This version  %created_by: nlhdl %
//              %date_created: maandag 6 juli 2015 10:46:51 %
//              %release: VI_CONV/RA_Dev_Oakham %
//
//Modification History:                                   By:    Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.12
//17742: Add Di_Safety source                           nlHdL    21-02-14   0.12
//15807: Block consistency update IO symbols, comment   nlHdL    18-09-13   0.11
//CR19512 Update sources according S7 Manager           nlHdL    8-3-13   0.10
//P12125 Modified FB_System_Control - FC_System_Control nlhdl    10-01-13   0.09
//PR9611 Added event 3134 check if event where handed   nlhdl    30-03-12   0.08
//CR7631 Insert key word for code generator             nlple    06-10-11   0.07
//Delete extra Area NW                                  nlJBax   03-05-11   0.06 
//FB_Area_Templ -> FC_Area_Templ                        nlJBax   14-01-11   0.05 
//PR6227 Add Network Numbering, AA -> ZA                nlMvDo   07-01-11   0.04 
//Add data layer for system                             nlMvK    26-10-10   0.03 
//Add call to FB_System_Control including DI            nlMRe    22-09-10   0.02
//Initial version                                       nlMRe    13-09-10   0.01
//
FAMILY : General
VERSION : 0.0


VAR
  s_FB_DAT_System : "FB_DAT";	//Block call static data layer system
END_VAR
VAR_TEMP
  t_DB_No_Event_System : INT ;	//DB number of event system
  t_DB_No_Event_not_empty : INT ;	//DB number of event which is not empty
  t_Not_Used : INT ;	//Not used int
END_VAR
BEGIN
NETWORK
TITLE =AA: Safety
//Collect all Safety Signals
      NOP   0; // Hold comments

      CALL "FB_Safety" , "DI_Safety" ;

NETWORK
TITLE =BA: Cabinet Manager CCC
//Cabinet Manager Central Control Cabinet
      NOP   0; // Hold comments

// INSERT  "FB_Cabinet Manager"

NETWORK
TITLE =CA: Cabinet Manager LCC
//Cabinet Manager Local Control Cabinet
      NOP   0; // Hold comments

// INSERT  "FB_DP_Slave_Cabinet"

NETWORK
TITLE =DA: IO Available

      CALL "FC_IO_Available" ;

NETWORK
TITLE =EA: System Control

      NOP   0; // Hold comments

      CALL "FC_System_Control" ;

NETWORK
TITLE = #Insert# // Insertion point code generator
//The generated source will be added overhere.      
NETWORK
TITLE =FA: Area AAAA

      NOP   0; // Hold comments
// INSERT  "FC_Area_Templ"
NETWORK
TITLE =GA: Status handling
//Satus manager, generate Overall Status and General Status
//Handle HMI and BPI status 
      CALL "FB_Status_Manager" , "DI_Status_Manager" ;

NETWORK
TITLE =HA: OP Controller

      NOP   0; // Hold comments

// INSERT  "FB_HMI_Area"

NETWORK
TITLE =IA: Data layer for system

      NOP   0; // system errors are reported with ID AAAA0000

      OPN   "DB_Event_System"; 
      L     DBNO; 
      T     #t_DB_No_Event_System; 

//Check if event DB section is empty (already reported)
      L     "DB_Event_Section".Entries_Used; 
      L     0; 
      >I    ; 
      JCN   IA01; 

      L     DBNO; 
      T     #t_DB_No_Event_not_empty; 

      CALL "FC_Write_Event" (
           i_Message_ID             := 3134,//Event DB is not empty (DAT Layer missing)
           i_Event_value            := #t_DB_No_Event_not_empty,
           i_DB_Event_Num           := #t_DB_No_Event_System,
           o_Return_Value           := #t_Not_Used);

//Check if event DB zone is empty (already reported)
IA01: L     "DB_Event_Zone".Entries_Used; 
      L     0; 
      >I    ; 
      JCN   IA02; 

      L     DBNO; 
      T     #t_DB_No_Event_not_empty; 

      CALL "FC_Write_Event" (
           i_Message_ID             := 3134,//Event DB is not empty (DAT Layer missing)
           i_Event_value            := #t_DB_No_Event_not_empty,
           i_DB_Event_Num           := #t_DB_No_Event_System,
           o_Return_Value           := #t_Not_Used);

//Check if event DB area is empty (already reported)
IA02: L     "DB_Event_Area".Entries_Used; 
      L     0; 
      >I    ; 
      JCN   IA03; 

      L     DBNO; 
      T     #t_DB_No_Event_not_empty; 

      CALL "FC_Write_Event" (
           i_Message_ID             := 3134,//Event DB is not empty (DAT Layer missing)
           i_Event_value            := #t_DB_No_Event_not_empty,
           i_DB_Event_Num           := #t_DB_No_Event_System,
           o_Return_Value           := #t_Not_Used);

IA03: NOP   0; 

      CALL #s_FB_DAT_System (
           i_ID_Section             := DW#16#0,
           i_DB_Event               := "DB_Event_System",
           i_PLC_FIFO_DB            := "DB_Send_FIFO",
           i_PLC_Log_FIFO_DB        := "DB_LOG_Event_FIFO",
           i_Degraded_Mode          := "M_Comm_Degraded",
           i_CFG_BPI_Log_Level      := "DB_Setting".common.External_Log_Level,
           i_CFG_PLC_Log_Level      := "DB_Setting".common.Internal_Log_Level,
           i_CFG_PLC_Log_SAC_Mesgs  := FALSE,
           i_CFG_PLC_LOG_BPI_Stat   := FALSE);


END_FUNCTION_BLOCK

