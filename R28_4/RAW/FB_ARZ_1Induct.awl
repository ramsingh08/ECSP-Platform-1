FUNCTION_BLOCK "FB_ARZ_1Induct"
TITLE =%version: 0.06 % CN: 60
//Function:
//- Arrival Zone (ARZ) with one induct section
//
//Description: 
//
//The block fulfils the following functions:
//- Start/stopping the ARZ
//- Re-starting from energy save
//- Status reporting
//- Cascade start up
//- Restart Energy saving via PB or TSO_PEC when manual loading
//- Automatically induct on gap or fixed gap when automatic loading
//
//The ARZ will be controlled with the following transport control functions:
//- Die-back control
//- Energy saving
//- Cascade starting
//- Induct on gap
//- Run signal equipment
//- Flow Control
//- Displacement
//- External interfacing
//
//The hardware LMS block fulfils the following functions:
//- Monitoring ASI address (not present/error)
//- Monitoring motor connection
//- Monitoring LMS healthy
//- Run motor signal
//
//The ARZ itself has no tracking functionality. 
//
//History:
//This version  %created_by:  nlhdl %
//              %date_created:  maandag 6 juli 2015 10:45:03 %
//              %release: VI_CONV/RA_Dev_Oakham %
//
//Modification History:                                By:     Date:    Rev:
//----------------------------------------------------  -------  --------  -----
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.06
//18028: Modify HardWare block LMS for Eaton Siemens    nlHdL    08-05-14   0.06
//16765: Change E-save symbol no common sett            nlHdL    16-12-13   0.05
//10433 Consistency output                              nlple    26-09-13  0.04
//10433 Dedicated UDT Setting added                     nlple    23-09-13  0.03
//10433 Changing  name i_PBB_LMS to i_PBB_ASI           nlple    23-09-13  0.02
//10433 Initial version                                 nlple    20-09-13  0.01
//Init version based on version 1.03 of FB_ARZ_Template
//
FAMILY : General
VERSION : 0.0


VAR_INPUT
  i_Setting : "UDT_ARZ_1Ind_Sett";	//Data structure: Setting Record
  i_CMD_Enable : BOOL ;	//CMD: Enable command
  i_CMD_Start : BOOL ;	//CMD: Start command
  i_CMD_Reset : BOOL ;	//CMD: Reset command
  i_CMD_Send_Stat : BOOL ;	//CMD: Send Statistical
  i_Safety_OK : BOOL  := TRUE;	//Safety is OK signal
  i_Available_IO : BOOL  := TRUE;	//Signal for indication IO is OK (no Fieldbus or IO error)
  i_PEC_ASI_NotPrsnt : BOOL ;	//ASI: Slave is not Present
  i_PEC_ASI_Err : BOOL ;	//ASI: Slave has an error
  i_SLC_ASI_NotPrsnt : BOOL ;	//ASI: Slave is not Present
  i_SLC_ASI_Err : BOOL ;	//ASI: Slave has an error
  i_PBB_ASI_NotPrsnt : BOOL ;	//ASI: Slave is not Present
  i_PBB_ASI_Error : BOOL ;	//ASI: Slave has an error
  i_PB_IO_Restart : BOOL ;	//HW: Push Button Restart
  i_TS_IO_NOT_PEC : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TRS1_Setting : "UDT_TRS_Bas1dir_Sett";	//Data Structure: Setting Record TRS1
  i_TRS1_ID : DWORD ;	//ID Record HEX AAAA - ZZSS/OO.
  i_TRS1_DB_PLT : BLOCK_DB ;	//Data Structure: Position DataBlock TRS1 TRS1 TRS1 TRS1 TRS1 TRS1
  i_TRS1_CFG_Block_Len : INT  := 300;	//CFG: [cm] Delay for detecting a PEC blockage
  i_TRS1_CFG_Conv_Speed : INT  := 1000;	//CFG: [mm/sec] Conveyor Speed
  i_TRS1_CFG_Run_Out_Dist : INT  := 20;	//CFG: [cm] Run out distance for the section
  i_TRS1_CFG_Windowlength : INT  := 120;	//CFG: [cm] Window length
  i_TRS1_CFG_Full_level_1 : INT  := 10;	//CFG: [%] Carrousel full level 1 reached
  i_TRS1_CFG_Full_level_2 : INT  := 25;	//CFG: [%] Carrousel full level 2 reached
  i_TRS1_CFG_Full_level_3 : INT  := 75;	//CFG: [%] Carrousel full level 3 reached
  i_TRS1_CFG_Full_level_4 : INT  := 90;	//CFG: [%] Carrousel full level 4 reached
  i_TRS1_LMS_NotPrsnt : BOOL ;	//HW: Section ASI LMS is not present
  i_TRS1_LMS_Error : BOOL ;	//HW: Section ASI LMS has an error
  i_TRS1_IO_NOT_PEC : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TRS1_IO_LMS_Auto : BOOL ;	//HW: Switch of Local Motor Starter is in 'Automatic' position
  i_TRS1_IO_LMS_Healthy : BOOL ;	//HW: "Healthy signal" of Local Motor Starter
  i_TRS1_Ext_Req_Rst_Es : BOOL ;	//Request signal form external Reset Energy Saving
  i_TRS2_Setting : "UDT_TRS_Bas1dir_Sett";	//Data Structure: Setting Record TRS2
  i_TRS2_ID : DWORD ;	//ID Record HEX AAAA - ZZSS/OO.
  i_TRS2_DB_PLT : BLOCK_DB ;	//Data Structure: Position DataBlock TRS2
  i_TRS2_Induct_DB_PLT : BLOCK_DB ;	//Data Structure: Position DataBlock induct for TRS2
  i_TRS2_CFG_Block_Length : INT  := 300;	//CFG: [cm] Delay for detecting a PEC blockage
  i_TRS2_CFG_Gap_Block_Len : INT  := 300;	//CFG: [cm] Delay for detecting a PEC blockage
  i_TRS2_CFG_Gap_Length : INT  := 35;	//CFG: [cm] Gap Length for induct on gap (0 = function disabled)
  i_TRS2_CFG_Conv_Speed : INT  := 1000;	//CFG: [mm/sec] Conveyor Speed
  i_TRS2_CFG_Run_Out_Dist : INT  := 20;	//CFG: [cm] Run out distance from nominal speed
  i_TRS2_ASI_NotPrsnt : BOOL ;	//ASI: Slave is not Present
  i_TRS2_LMS_Error : BOOL ;	//ASI: Slave has an Error
  i_TRS2_IO_NOT_PEC : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TRS2_IO_NOT_PEC_GAP : BOOL ;	//HW: Fail safe signal of Photo Electric Cell (TRUE=No product detected)
  i_TRS2_IO_AutomaticMode : BOOL ;	//HW: Switch of Local Motor Starter is in 'Automatic' position
  i_TRS2_IO_LMS_Healthy : BOOL ;	//HW: "Healthy signal" of Local Motor Starter
END_VAR
VAR_OUTPUT
  o_Ready_To_Restart : BOOL ;	//Ready To Restart to system control
  o_ST_Full_level_1 : BOOL ;	//ST: Carrousel full level 1 reached
  o_ST_Full_level_2 : BOOL ;	//ST: Carrousel full level 2 reached
  o_ST_Full_level_3 : BOOL ;	//ST: Carrousel full level 3 reached
  o_ST_Full_level_4 : BOOL ;	//ST: Carrousel full level 4 reached
  o_ST_Full_Err : BOOL ;	//ST: Carrousel full level 4 reached error
  o_ST_GAP_PEC_1_Block : BOOL ;	//ST: Photo Cell blockage
  o_ST_PEC_TS_Blk : BOOL ;	//ST: PEC blockage
  o_PEC_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_PEC_ST_ASI_Error : BOOL ;	//ST: ASI slave has an error
  o_SLC_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_SLC_ST_ASI_Error : BOOL ;	//ST: ASI slave has an error
  o_PBB_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_PBB_ST_ASI_Error : BOOL ;	//ST: ASI slave has an error
  o_IO_FL_Signal_Lamp : BOOL ;	//HW: Flashlight 
  o_IO_Horn_Start_Up : BOOL ;	//HW: Horn when starting up this level
  o_IO_SL_Available : BOOL ;	//HW: Signal Light Available
  o_TRS1_IO_MTR_Fwd : BOOL ;	//HW: Run signal to motor forward of conveyor
  o_TRS1_IO_MTR_Rev : BOOL ;	//HW: Run signal to motor reverse of conveyor
  o_TRS1_IO_Disable_QS : BOOL ;	//HW: Disable quick stop function
  o_TRS1_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_TRS1_ST_ASI_Error : BOOL ;	//ST: LMS ASI slave has an error
  o_TRS1_ST_Items : BOOL ;	//ST: Items present on section
  o_TRS1_ST_Running : BOOL ;	//ST: Section is running
  o_TRS1_ST_Started : BOOL ;	//ST: Started
  o_TRS1_ST_Req_Halt : BOOL ;	//ST: Request Halt
  o_TRS1_ST_Req_Stop : BOOL ;	//ST: Request Stop
  o_TRS1_ST_Not_Auto : BOOL ;	//ST: The local motor starter is reporting not Automatic
  o_TRS1_ST_Not_Hthy : BOOL ;	//ST: The local motor starter is reporting not Healthy
  o_TRS1_ST_PEC_Blk : BOOL ;	//ST: PEC Blockage
  o_TRS1_EXT_Outputs : "UDT_External_Outputs";	//External Outputs
  o_TRS2_IO_MTR_Fwd : BOOL ;	//HW: Run signal to motor forward of conveyor
  o_TRS2_IO_MTR_Rev : BOOL ;	//HW: Run signal to motor reverse of conveyor
  o_TRS2_IO_Disable_QS : BOOL ;	//HW: Disable quick stop function
  o_TRS2_ST_ASI_NotPrsnt : BOOL ;	//ST: ASI slave is not present
  o_TRS2_ST_ASI_Error : BOOL ;	//ST: LMS ASI slave has an error
  o_TRS2_ST_Items : BOOL ;	//ST: Items present on section
  o_TRS2_ST_Running : BOOL ;	//ST: Section is running
  o_TRS2_ST_Started : BOOL ;	//ST: Started
  o_TRS2_ST_Req_Halt : BOOL ;	//ST: Request Halt
  o_TRS2_ST_Req_Stop : BOOL ;	//ST: Request Stop
  o_TRS2_ST_Not_Automatic : BOOL ;	//ST: The motor is reporting not Automatic
  o_TRS2_ST_Not_Healthy : BOOL ;	//ST: The motor is reporting not Healthy
  o_TRS2_ST_PEC_Blk : BOOL ;	//ST: PEC Blockage
  o_TRS2_EXT_Outputs : "UDT_External_Outputs";	//External Outputs
END_VAR
VAR
  s_ARZ_Active : BOOL ;	//ARZ is active
  s_ARZ_Inactive : BOOL ;	//ARZ is inactive
  s_ARZ_ST_Error : BOOL ;	//ARZ error
  s_TRS1_FB_EQP_PEC : "FB_EQP_PEC";	
  s_TRS1_FB_EQP_Basic : "FB_EQP_Basic";	
  s_TRS1_FB_StrtUp_Signal : "FB_Start_Up_Signal";	
  s_TRS1_FB_Full_Status : "FB_TF_TT_Full_Status";	
  s_TRS1_FB_HW_MTR_LMS : "FB_HW_MTR_LMS";	
  s_TRS1_FB_DAT : "FB_DAT";	
  s_TRS1_EQP_LPOS : INT ;	//postion of the bag on the tracking layer
  s_TRS1_EQP_PEC_Position : INT ;	//postion of the physical PEC
  s_TRS1_Ext_Req_Stop : BOOL ;	//request from external to stop conveyor
  s_TRS1_Ext_Req_Halt : BOOL ;	//request from external to halt conveyor
  s_TRS1_Ext_Req_Rst_ESve : BOOL ;	//request from external to reset energy saving
  s_TRS1_Motor_Run : BOOL ;	//run motor  
  s_TRS1_FL_Start_Up : BOOL ;	//flash light start up
  s_TRS1_Horn_Start_Up : BOOL ;	//horn start up
  s_TRS2_FB_Induct : "FB_Induct";	
  s_TRS2_FB_EQP_Gap_PEC : "FB_EQP_PEC";	
  s_TRS2_FB_EQP_PEC : "FB_EQP_PEC";	
  s_TRS2_FB_EQP_Basic : "FB_EQP_Basic";	
  s_TRS2_FB_HW_MTR_LMS : "FB_HW_MTR_LMS";	
  s_TRS2_FB_DAT : "FB_DAT";	
  s_TRS2_EQP_LPOS : INT ;	//postion of the bag on the tracking layer
  s_TRS2_EQP_PEC_Position : INT ;	//postion of the physical PEC
  s_TRS2_GAP_PEC_LPOS : INT ;	//position of the bag on the tracking layer
  s_TRS2_Ext_Req_Stop : BOOL ;	//request from external to stop conveyor
  s_TRS2_Ext_Req_Dis_Send : BOOL ;	//request from external to disable products
  s_TRS2_Motor_Run : BOOL ;	//run motor
  s_TRS2_ST_Not_Automatic : BOOL ;	//Status: The motor is reporting not Automatic
  s_GAP_PEC_Position_1 : INT ;	
  s_GAP_PEC_Position_2 : INT ;	
  s_StrtUp_Signal_Req_Halt : BOOL ;	
  s_TS_FB_Trigger_PEC : "FB_EQP_PEC_Trigger";	//Data structure
  s_TS_PEC_TrigFlapFilt : BOOL ;	//flap filter including delay on leading edge of product
  s_TRS1_Operation_On : BOOL ;	
  s_TRS1_Ready_To_Restart : BOOL ;	//Ready To Restart to system control
  s_TRS2_Ready_To_Restart : BOOL ;	//CMD: Ready To Restart to system control
  s_SLC_FB_HW_ASI : "FB_HW_ASi";	//Signal light Coloumn ASI Slave hardware layer
  s_PEC_FB_HW_ASI : "FB_HW_ASi";	//GAP PEC ASI Slave hardware layer
  s_PBB_FB_HW_ASI : "FB_HW_ASi";	//GAP PEC ASI Slave hardware layer
  s_Req_FL_Start_Up : BOOL ;	
  s_Req_Horn_Start_Up : BOOL ;	
END_VAR
VAR_TEMP
  t_TRS_Start_Up_Dist : INT ;	//Calculated start-up distance = run-out / 2
  t_DB_PLT_TRS2 : INT ;	//DB PLT Number
  t_DB_Num_Event : INT ;	//Number of the Event DB
  t_BOOL_Not_Used : BOOL ;	//Temp bool is not used (only connection)
END_VAR
BEGIN
NETWORK
TITLE =AA: ARZ Active/Inactive

      NOP   0; 
// ARZ Active
      A     #i_Safety_OK; 
      A     #o_TRS1_ST_Started; 
      AN    #s_ARZ_ST_Error; 
      S     #s_ARZ_Active; 
      R     #s_ARZ_Inactive; 

// ARZ Inactive
      AN    #i_Safety_OK; 
      ON    #o_TRS1_ST_Started; 
      S     #s_ARZ_Inactive; 
      R     #s_ARZ_Active; 
NETWORK
TITLE =BA: Infeed INF01
//
//
      NOP   0; 
//--Induct-01
      CALL #s_TRS2_FB_Induct (
           i_Setting                := #i_Setting.TRS2_Induct,
           i_DB_PLT                 := #i_TRS2_Induct_DB_PLT,
           i_DB_PLT_Merge           := #i_TRS1_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_CFG_PEC_Offset         := 0,
           i_CFG_Search_Window      := 50,
           i_CFG_Gap_Length         := #i_TRS2_CFG_Gap_Length,
           i_CFG_Induct_Number_FWD  := 1,
           i_CFG_Induct_Number_REV  := 0,
           i_CFG_Run_Out_Dist_Gap   := #i_TRS2_CFG_Run_Out_Dist,
           i_LPOS_Gap_PEC           := #s_TRS2_GAP_PEC_LPOS);


//--Induct-01 PEC
      CALL #s_TRS2_FB_EQP_PEC (
           i_Setting                := #i_TRS2_Setting.PEC_1D,
           i_DB_PLT                 := #i_TRS2_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_Dwnstr_PLT_Pos         := 0,
           i_CFG_Blockage_Length    := #i_TRS2_CFG_Block_Length,
           i_CFG_Delay_On_Filter    := 0,
           i_CFG_Delay_Off_Filter   := 20,
           i_CFG_Min_Product_Length := 0,
           i_CFG_Preset_PEC_Latch   := #s_TRS2_ST_Not_Automatic,
           i_CFG_Track_Present      := FALSE,
           i_CFG_Reset_Block_PEC_Oc := FALSE,
           i_IO_NOT_PEC             := #i_TRS2_IO_NOT_PEC,
           i_Eqp_Available_IO       := #i_Available_IO,
           i_CMD_Reset              := #i_CMD_Reset,
           o_LPOS                   := #s_TRS2_EQP_LPOS,
           o_PEC_Position           := #s_TRS2_EQP_PEC_Position,
           o_ST_PEC_Blk             := #o_TRS2_ST_PEC_Blk);

//Calculated standard start-up for section
      L     #i_TRS2_CFG_Run_Out_Dist; 
      L     2; 
      /I    ; 
      T     #t_TRS_Start_Up_Dist; 

//--Condition to Request stop
      A     #o_TRS2_ST_PEC_Blk; 
      O     #o_ST_GAP_PEC_1_Block; 
      O     #o_TRS2_ST_ASI_NotPrsnt; 
      O     #o_TRS2_ST_ASI_Error; 
      O     #o_TRS2_ST_Not_Automatic; 
      O     #o_TRS2_ST_Not_Healthy; 
      =     #s_TRS2_Ext_Req_Stop; 

//Copy PLT DB number to temp
      OPN   #i_TRS2_DB_PLT; 
      L     DBNO; 
      T     #t_DB_PLT_TRS2; 

//Clear PLT DB when LMS is not automatic
      CALL "FC_PLT_Clr_DB" (
           i_Enable_Clr             := #s_TRS2_ST_Not_Automatic,
           i_DB_PLT_Num             := #t_DB_PLT_TRS2,
           i_DB_Event_Num           := 329);//"DB_Event_Section"

//--Induct-01 Equipmnet
      CALL #s_TRS2_FB_EQP_Basic (
           i_ID_Section             := #i_TRS2_ID,
           i_Setting                := #i_TRS2_Setting.Basic,
           i_DB_PLT                 := #i_TRS2_DB_PLT,
           i_DB_PLT_DwnStr          := #i_TRS2_Induct_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_CFG_Conveyor_Speed     := #i_TRS2_CFG_Conv_Speed,
           i_CFG_Run_Out_Distance   := #i_TRS2_CFG_Run_Out_Dist,
           i_CFG_Start_Up_Distance  := #t_TRS_Start_Up_Dist,
           i_CFG_Minimum_Gap        := 50,
           i_CFG_Add_Gap_Stop       := 20,
           i_CFG_Minimum_H2H        := 100,
           i_CFG_Add_H2H_Stop       := 20,
           i_CFG_Cascade_Delay_Time := 0,
           i_CFG_Strt_Up_T_E_Save   := "DB_Setting".common.Start_Up_Time_E_Save,
           i_CFG_Run_Out_E_Save     := "DB_Setting".common.Run_Out_Time_E_Save,
           i_CFG_Stop_T_E_Save      := "DB_Setting".common.Stop_Time_E_Save,
           i_CFG_Disbl_E_Save       := "DB_Setting".common.Disable_Energy_Saving,
           i_CFG_Slave_Mode         := FALSE,
           i_CFG_Del_Window_Codes   := FALSE,
           i_PPI_Displacement       := 0,
           i_Dwnstr_PLT_Pos         := #s_TRS2_EQP_PEC_Position,
           i_Available_IO           := #i_Available_IO,
           i_Safety_OK              := #i_Safety_OK,
           i_CMD_Enable             := #i_CMD_Enable,
           i_CMD_Start              := #i_CMD_Start,
           i_Ext_Req_Stop           := #s_TRS2_Ext_Req_Stop,
           i_Ext_Req_Dis_Send       := #s_TRS2_Ext_Req_Dis_Send,
           i_OS_Direction_Change    := FALSE,
           o_External               := #o_TRS2_EXT_Outputs,
           o_Motor_Run              := #s_TRS2_Motor_Run,
           o_ST_Items               := #o_TRS2_ST_Items,
           o_ST_Running             := #o_TRS2_ST_Running,
           o_ST_Started             := #o_TRS2_ST_Started,
           o_ST_Request_Halt        := #o_TRS2_ST_Req_Halt,
           o_ST_Request_Stop        := #o_TRS2_ST_Req_Stop,
           o_Ready_To_Restart       := #s_TRS2_Ready_To_Restart);

//--Induct-01 Hardware
      CALL #s_TRS2_FB_HW_MTR_LMS (
           i_CMD_Send_Stat          := #i_CMD_Send_Stat,
           i_Event_DB               := "DB_Event_Section",
           i_Available_IO           := #i_Available_IO,
           i_Quick_Stop             := FALSE,
           i_LMS_NotPrsnt           := #i_TRS2_ASI_NotPrsnt,
           i_LMS_Error              := #i_TRS2_LMS_Error,
           i_IO_LMS_Auto            := #i_TRS2_IO_AutomaticMode,
           i_IO_LMS_Healthy         := #i_TRS2_IO_LMS_Healthy,
           i_CMD_Reset              := #i_CMD_Reset,
           i_CMD_Req_Motor_Forward  := #s_TRS2_Motor_Run,
           o_IO_MTR_Fwd             := #o_TRS2_IO_MTR_Fwd,
           o_IO_MTR_Rev             := #o_TRS2_IO_MTR_Rev,
           o_IO_MTR_Dis_Quick_Stop  := #o_TRS2_IO_Disable_QS,
           o_ST_ASI_NotPrsnt        := #o_TRS2_ST_ASI_NotPrsnt,
           o_ST_ASI_Err             := #o_TRS2_ST_ASI_Error,
           o_ST_LMS_Not_Auto        := #s_TRS2_ST_Not_Automatic,
           o_ST_LMS_Not_Hthy        := #o_TRS2_ST_Not_Healthy);

//Copy static to output
      A     #s_TRS2_ST_Not_Automatic; 
      =     #o_TRS2_ST_Not_Automatic; 

//Data to SAC
      CALL #s_TRS2_FB_DAT (
           i_ID_Section             := #i_TRS2_ID,
           i_DB_Event               := "DB_Event_Section",
           i_PLC_FIFO_DB            := "DB_Send_FIFO",
           i_PLC_Log_FIFO_DB        := "DB_LOG_Event_FIFO",
           i_Degraded_Mode          := "M_Comm_Degraded",
           i_CFG_BPI_Log_Level      := "DB_Setting".common.External_Log_Level,
           i_CFG_PLC_Log_Level      := "DB_Setting".common.Internal_Log_Level,
           i_CFG_PLC_Log_SAC_Mesgs  := FALSE,
           i_CFG_PLC_LOG_BPI_Stat   := FALSE);

NETWORK
TITLE =CA: TRS1 (Triplanar flat / Triplanar tilted) carrousel

      NOP   0; 
//--Hardware layer of ASI-Slave which is used PBB--
      CALL #s_PBB_FB_HW_ASI (
           i_Req_Output_1           := FALSE,
           i_Req_Output_2           := FALSE,
           i_Req_Output_3           := FALSE,
           i_Req_Output_4           := FALSE,
           i_CMD_Reset              := #i_CMD_Reset,
           i_Available_IO           := #i_Available_IO,
           i_ASI_NotPrsnt           := #i_PBB_ASI_NotPrsnt,
           i_Slave_Error            := #i_PBB_ASI_Error,
           i_CFG_Delay_Time         := 0,
           o_ST_ASI_NotPrsnt        := #o_PBB_ST_ASI_NotPrsnt,
           o_ST_ASI_Error           := #o_PBB_ST_ASI_Error,
           o_IO_Output_1            := #t_BOOL_Not_Used,
           o_IO_Output_2            := #t_BOOL_Not_Used,
           o_IO_Output_3            := #t_BOOL_Not_Used,
           o_IO_Output_4            := #t_BOOL_Not_Used);

//--Hardware layer of ASI-Slave which is used GAP PEC--
      CALL #s_PEC_FB_HW_ASI (
           i_Req_Output_1           := FALSE,
           i_Req_Output_2           := FALSE,
           i_Req_Output_3           := FALSE,
           i_Req_Output_4           := FALSE,
           i_CMD_Reset              := #i_CMD_Reset,
           i_Available_IO           := #i_Available_IO,
           i_ASI_NotPrsnt           := #i_PEC_ASI_NotPrsnt,
           i_Slave_Error            := #i_PEC_ASI_Err,
           i_CFG_Delay_Time         := 0,
           o_ST_ASI_NotPrsnt        := #o_PEC_ST_ASI_NotPrsnt,
           o_ST_ASI_Error           := #o_PEC_ST_ASI_Error,
           o_IO_Output_1            := #t_BOOL_Not_Used,
           o_IO_Output_2            := #t_BOOL_Not_Used,
           o_IO_Output_3            := #t_BOOL_Not_Used,
           o_IO_Output_4            := #t_BOOL_Not_Used);

//--Induct-01 GAP PEC
      CALL #s_TRS2_FB_EQP_Gap_PEC (
           i_Setting                := #i_Setting.TRS2_Gap_PEC,
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_Dwnstr_PLT_Pos         := 0,
           i_CFG_Blockage_Length    := #i_TRS2_CFG_Gap_Block_Len,
           i_CFG_Delay_On_Filter    := 0,
           i_CFG_Delay_Off_Filter   := 20,
           i_CFG_Min_Product_Length := 0,
           i_CFG_Preset_PEC_Latch   := FALSE,
           i_CFG_Track_Present      := FALSE,
           i_CFG_Reset_Block_PEC_Oc := TRUE,
           i_IO_NOT_PEC             := #i_TRS2_IO_NOT_PEC_GAP,
           i_Eqp_Available_IO       := #i_Available_IO,
           i_CMD_Reset              := #i_CMD_Reset,
           o_LPOS                   := #s_TRS2_GAP_PEC_LPOS,
           o_PEC_Position           := #s_GAP_PEC_Position_1,
           o_ST_PEC_Blk             := #o_ST_GAP_PEC_1_Block);

//--Triplanner PEC
      CALL #s_TRS1_FB_EQP_PEC (
           i_Setting                := #i_TRS1_Setting.PEC_1D,
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_Dwnstr_PLT_Pos         := #s_GAP_PEC_Position_1,
           i_CFG_Blockage_Length    := #i_TRS1_CFG_Block_Len,
           i_CFG_Delay_On_Filter    := 0,
           i_CFG_Delay_Off_Filter   := 20,
           i_CFG_Min_Product_Length := 0,
           i_CFG_Preset_PEC_Latch   := FALSE,
           i_CFG_Track_Present      := FALSE,
           i_CFG_Reset_Block_PEC_Oc := TRUE,
           i_IO_NOT_PEC             := #i_TRS1_IO_NOT_PEC,
           i_Eqp_Available_IO       := #i_Available_IO,
           i_CMD_Reset              := #i_CMD_Reset,
           o_LPOS                   := #s_TRS1_EQP_LPOS,
           o_PEC_Position           := #s_TRS1_EQP_PEC_Position,
           o_ST_PEC_Blk             := #o_TRS1_ST_PEC_Blk);

      CALL #s_TS_FB_Trigger_PEC (
           i_CFG_Blockage_Length    := 0,
           i_CFG_Delay_On_Filter    := 500,
           i_CFG_Reset_Block_PEC_Oc := FALSE,
           i_CFG_Time_Displacement  := FALSE,
           i_IO_NOT_PEC             := #i_TS_IO_NOT_PEC,
           i_Eqp_Available_IO       := FALSE,
           i_CMD_Reset              := #i_CMD_Reset,
           o_ST_PEC_Blk             := #o_ST_PEC_TS_Blk,
           o_PEC_Flap_Filter        := #s_TS_PEC_TrigFlapFilt);

//-- Triplanner operational On
      A     #o_TRS1_EXT_Outputs.Operational_On; 
      =     #s_TRS1_Operation_On; 

//--Condition to Reset Energy save
      ON    #i_TRS2_IO_NOT_PEC; 
      O     #s_TS_PEC_TrigFlapFilt; 
      O     #i_TRS1_Ext_Req_Rst_Es; 
      O     #i_PB_IO_Restart; 
      A     #o_TRS1_EXT_Outputs.Energy_Saving; 
      =     #s_TRS1_Ext_Req_Rst_ESve; 

      OPN   "DB_Event_Section"; 
      L     DBNO; 
      T     #t_DB_Num_Event; 

//--Triplanner Start-up signal
      CALL #s_TRS1_FB_StrtUp_Signal (
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_DB_Event_Num           := #t_DB_Num_Event,
           i_CFG_StartUp_Time       := 5000,
           i_Operational_On         := #s_TRS1_Operation_On,
           i_Reset_E_Save           := #s_TRS1_Ext_Req_Rst_ESve,
           o_FL_Start_Up            := #s_TRS1_FL_Start_Up,
           o_Horn_Start_Up          := #s_TRS1_Horn_Start_Up,
           o_Req_Halt               := #s_StrtUp_Signal_Req_Halt);

//Calculated standard start-up for section
      L     #i_TRS1_CFG_Run_Out_Dist; 
      L     2; 
      /I    ; 
      T     #t_TRS_Start_Up_Dist; 

//--Condition to Request Stop
      A     #o_ST_GAP_PEC_1_Block; 
      O     #o_TRS1_ST_PEC_Blk; 
      O     #o_TRS1_ST_ASI_NotPrsnt; 
      O     #o_TRS1_ST_ASI_Error; 
      O     #o_TRS1_ST_Not_Auto; 
      O     #o_TRS1_ST_Not_Hthy; 
      =     #s_TRS1_Ext_Req_Stop; 

//--Condition to Request Halt
      A     #s_StrtUp_Signal_Req_Halt; 
      =     #s_TRS1_Ext_Req_Halt; 

//--Equipment basic (Triplanner)
      CALL #s_TRS1_FB_EQP_Basic (
           i_ID_Section             := #i_TRS1_ID,
           i_Setting                := #i_TRS1_Setting.Basic,
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_DB_PLT_DwnStr          := #i_TRS1_DB_PLT,
           i_DB_Event               := "DB_Event_Section",
           i_CFG_Conveyor_Speed     := #i_TRS1_CFG_Conv_Speed,
           i_CFG_Run_Out_Distance   := #i_TRS1_CFG_Run_Out_Dist,
           i_CFG_Start_Up_Distance  := #t_TRS_Start_Up_Dist,
           i_CFG_Minimum_Gap        := 0,
           i_CFG_Add_Gap_Stop       := 0,
           i_CFG_Minimum_H2H        := 0,
           i_CFG_Add_H2H_Stop       := 0,
           i_CFG_Cascade_Delay_Time := 0,
           i_CFG_Strt_Up_T_E_Save   := "DB_Setting".common.Start_Up_Time_E_Save,
           i_CFG_Run_Out_E_Save     := "DB_Setting".common.Run_Out_Time_E_Save,
           i_CFG_Stop_T_E_Save      := "DB_Setting".common.Stop_Time_E_Save,
           i_CFG_Disbl_E_Save       := "DB_Setting".common.Disable_Energy_Saving,
           i_CFG_Slave_Mode         := FALSE,
           i_CFG_Del_Window_Codes   := TRUE,
           i_PPI_Displacement       := 0,
           i_Dwnstr_PLT_Pos         := #s_TRS1_EQP_PEC_Position,
           i_Available_IO           := #i_Available_IO,
           i_Safety_OK              := #i_Safety_OK,
           i_CMD_Enable             := #i_CMD_Enable,
           i_CMD_Start              := #i_CMD_Start,
           i_Ext_Req_Stop           := #s_TRS1_Ext_Req_Stop,
           i_Ext_Req_Halt           := #s_TRS1_Ext_Req_Halt,
           i_Ext_Req_Dis_Send       := FALSE,
           i_Ext_Req_Rst_ESave      := #s_TRS1_Ext_Req_Rst_ESve,
           i_OS_Direction_Change    := FALSE,
           o_External               := #o_TRS1_EXT_Outputs,
           o_Motor_Run              := #s_TRS1_Motor_Run,
           o_ST_Items               := #o_TRS1_ST_Items,
           o_ST_Running             := #o_TRS1_ST_Running,
           o_ST_Started             := #o_TRS1_ST_Started,
           o_ST_Request_Halt        := #o_TRS1_ST_Req_Halt,
           o_ST_Request_Stop        := #o_TRS1_ST_Req_Stop,
           o_Ready_To_Restart       := #s_TRS1_Ready_To_Restart);

//--Determine Full status of the Triplanner
      CALL #s_TRS1_FB_Full_Status (
           i_DB_PLT                 := #i_TRS1_DB_PLT,
           i_CFG_Window_Length      := #i_TRS1_CFG_Windowlength,
           i_CFG_Full_Error_Time    := 120,
           i_CFG_Full_level_1       := #i_TRS1_CFG_Full_level_1,
           i_CFG_Full_level_2       := #i_TRS1_CFG_Full_level_2,
           i_CFG_Full_level_3       := #i_TRS1_CFG_Full_level_3,
           i_CFG_Full_level_4       := #i_TRS1_CFG_Full_level_4,
           i_PEC_Latch              := #s_TRS1_FB_EQP_PEC.s_PEC_Flap_Filter,
           i_CMD_Reset              := #i_CMD_Reset,
           o_ST_Full_level_1        := #o_ST_Full_level_1,
           o_ST_Full_level_2        := #o_ST_Full_level_2,
           o_ST_Full_level_3        := #o_ST_Full_level_3,
           o_ST_Full_level_4        := #o_ST_Full_level_4,
           o_ST_Full_Error          := #o_ST_Full_Err);

//--Hardware of the Triplanner
      CALL #s_TRS1_FB_HW_MTR_LMS (
           i_CMD_Send_Stat          := #i_CMD_Send_Stat,
           i_Event_DB               := "DB_Event_Section",
           i_Available_IO           := #i_Available_IO,
           i_Quick_Stop             := FALSE,
           i_LMS_NotPrsnt           := #i_TRS1_LMS_NotPrsnt,
           i_LMS_Error              := #i_TRS1_LMS_Error,
           i_IO_LMS_Auto            := #i_TRS1_IO_LMS_Auto,
           i_IO_LMS_Healthy         := #i_TRS1_IO_LMS_Healthy,
           i_CMD_Reset              := #i_CMD_Reset,
           i_CMD_Req_Motor_Forward  := #s_TRS1_Motor_Run,
           o_IO_MTR_Fwd             := #o_TRS1_IO_MTR_Fwd,
           o_IO_MTR_Rev             := #o_TRS1_IO_MTR_Rev,
           o_IO_MTR_Dis_Quick_Stop  := #o_TRS1_IO_Disable_QS,
           o_ST_ASI_NotPrsnt        := #o_TRS1_ST_ASI_NotPrsnt,
           o_ST_ASI_Err             := #o_TRS1_ST_ASI_Error,
           o_ST_LMS_Not_Auto        := #o_TRS1_ST_Not_Auto,
           o_ST_LMS_Not_Hthy        := #o_TRS1_ST_Not_Hthy);

      CALL #s_TRS1_FB_DAT (
           i_ID_Section             := #i_TRS1_ID,
           i_DB_Event               := "DB_Event_Section",
           i_PLC_FIFO_DB            := "DB_Send_FIFO",
           i_PLC_Log_FIFO_DB        := "DB_LOG_Event_FIFO",
           i_Degraded_Mode          := "M_Comm_Degraded",
           i_CFG_BPI_Log_Level      := "DB_Setting".common.External_Log_Level,
           i_CFG_PLC_Log_Level      := "DB_Setting".common.Internal_Log_Level,
           i_CFG_PLC_Log_SAC_Mesgs  := FALSE,
           i_CFG_PLC_LOG_BPI_Stat   := FALSE);

NETWORK
TITLE =DA: Status report error
//LAD!
      O     #s_TRS2_Ext_Req_Stop; 
      O     #s_TRS1_Ext_Req_Stop; 
      =     #s_ARZ_ST_Error; 
NETWORK
TITLE =EA: Flash light
//LAD!
      A(    ; 
      O     #s_TRS1_FL_Start_Up; 
      O     #s_ARZ_ST_Error; 
      )     ; 
      A     "M_System_Clock_1.0_sec."; 
      =     #s_Req_FL_Start_Up; 

NETWORK
TITLE =FA:  horn signalling
//LAD!
      A     #s_TRS1_Horn_Start_Up; 
      A     "M_System_Clock_1.0_sec."; 
      =     #s_Req_Horn_Start_Up; 
NETWORK
TITLE =GA: Available signal light if ARZ is Available or in Error
////LAD!
      AN    #s_ARZ_Inactive; 
      AN    #s_TRS1_Ext_Req_Stop; 
      O     ; 
      A     #s_ARZ_ST_Error; 
      A     "M_System_Clock_1.0_sec."; 
      =     #o_IO_SL_Available; 

NETWORK
TITLE =HA: Hardware layer for Signal Light Coloumn

      NOP   0; 
//--Hardware layer for Signal Light Coloumn
      CALL #s_SLC_FB_HW_ASI (
           i_Req_Output_1           := #s_Req_FL_Start_Up,
           i_Req_Output_2           := #s_Req_Horn_Start_Up,
           i_Req_Output_3           := FALSE,
           i_Req_Output_4           := FALSE,
           i_CMD_Reset              := #i_CMD_Reset,
           i_Available_IO           := #i_Available_IO,
           i_ASI_NotPrsnt           := #i_SLC_ASI_NotPrsnt,
           i_Slave_Error            := #i_SLC_ASI_Err,
           i_CFG_Delay_Time         := 0,
           o_ST_ASI_NotPrsnt        := #o_SLC_ST_ASI_NotPrsnt,
           o_ST_ASI_Error           := #o_SLC_ST_ASI_Error,
           o_IO_Output_1            := #o_IO_FL_Signal_Lamp,
           o_IO_Output_2            := #o_IO_Horn_Start_Up,
           o_IO_Output_3            := #t_BOOL_Not_Used,
           o_IO_Output_4            := #t_BOOL_Not_Used);

NETWORK
TITLE =IA: Zone Signals
//LAD!
      A     #s_TRS1_Ready_To_Restart; 
      O     #s_TRS2_Ready_To_Restart; 
      =     #o_Ready_To_Restart; 
END_FUNCTION_BLOCK

