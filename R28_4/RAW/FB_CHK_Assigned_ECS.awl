FUNCTION_BLOCK "FB_CHK_Assigned_ECS"
TITLE =%version: 0.03 % CN: 40
//Function:
//Check the LNK number in a DB_ECS_List, validate the LNK number in the 
//DB_ECS_List if they are not same then clear the LNK number in the DB_ECS_List.
//
//History:                                                                        
//This version   %created_by: nlhdl %
//              %date_created: maandag 6 juli 2015 10:35:00 %
//              %release: VI_CONV/RA_Dev_Oakham %
//
//Modification History:                                   By:    Date:     Rev:
//----------------------------------------------------  -------  --------  -----
//7324: ECS-P General from the RD to RA for platform    nlHdL    06-07-15   0.03
//15797: Keyword release added                          nlwwij   26-09-13   0.03
//Renewed Check assigned block                          nlLvdG   22-03-12  0.02
//Initial revision                                      nlLvdG   21-03-12  0.01
FAMILY : General
VERSION : 0.0


VAR
  s_LNK_Number : INT ;	//Number of LNK which is checked
  s_List_assigned : BOOL ;	//Temp to check if list is assigned without DB PLT
  s_ECS_Number : INT ;	//ECS counter
END_VAR
VAR_TEMP
  t_Record_Length : INT ;	//Temp length of used record
  t_ECS_LNK_Found : INT ;	//Temp entry in ECS
  t_AR1_BackUp : DWORD ;	//AR1 back-up
  t_LNK_DB_ECS_Number : INT ;	//DB_LNK_List contains ECS number
END_VAR
BEGIN
NETWORK
TITLE =AA: Check the ECS List

      OPN   "DB_ECS_List"; //Open the ECS list
      L     DBW    2; 
      T     #t_Record_Length; 
      L     DBW    6; 
      +     -1; 
      L     #s_ECS_Number; //Checking for Maximum ECS Item present
      ==I   ; 
      JCN   AA02; 

      L     1; 
      T     #s_ECS_Number; 
      JU    AA99; 

AA02: L     #s_ECS_Number; //Incremental ECS number to DB_LIC_List
      +     1; 
      T     #s_ECS_Number; 

AA99: NOP   0; 

NETWORK
TITLE =BA: Check if ECS is Assigned
//If entry is not assigned then end block.
      L     #t_Record_Length; 
      L     #s_ECS_Number; 
      *D    ; 
      L     DBW    0; // Length header
      +D    ; 
      SLD   3; 
      LAR1  ; // Pointer to LNK entry in DB_LNK

// Loop to check if entry = 0
      L     DBW [AR1,P#0.0]; 
      T     #t_ECS_LNK_Found; //LNK Number in DB_ECS_List
      L     0; 
      <>I   ; 
      JCN   BA99; // ECS is not Assigned jump to end of the network

      TAR1  #t_AR1_BackUp; 

//Open the LNK_DB & verify the ECS

      OPN   "DB_LNK_List"; // Open LNK list
      L     DBW    2; 
      T     #t_Record_Length; 

      L     #t_ECS_LNK_Found; 
      L     #t_Record_Length; 
      *D    ; 
      L     DBW    0; // Length header
      +D    ; 
      SLD   3; 
      LAR1  ; 

      L     DBW [AR1,P#0.0]; 
      T     #t_LNK_DB_ECS_Number; //ECS assigned in the DB_LNK_List 


      L     #s_ECS_Number; //ECS to be checked
      L     #t_LNK_DB_ECS_Number; //ECS assigned in the DB_LNK_List 
      <>I   ; 
      JCN   BA99; //If Not equall clear the LNK in DB_ECS_List

      LAR1  #t_AR1_BackUp; 

      OPN   "DB_ECS_List"; 
      L     0; 
      T     DBW [AR1,P#0.0]; //LNK Number in DB_ECS_List

//-----Log the Event--------------//
// Log event will be reported by the FB_CHK_Assigned_LNK when ECS is cleared

BA99: NOP   0; 
END_FUNCTION_BLOCK

